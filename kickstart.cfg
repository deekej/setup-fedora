# Steps to use this kickstart file with Silverblue ISO:
# -----------------------------------------------------
# 1. Prepare the USB boot stick for current version of Silverblue with Fedora Media Writer.
# 2. Plug the USB stick into a machine that is to be reinstalled.
# 3. In the GRUB2 menu, select the "Install Fedora" menu item, and pres 'E' on the keyboard.
# 4. Append this boot parameter: inst.ks=https://deekej.io/fedora-kickstart.cfg
# 5. Press CTRL+X to start the automatic installation.

# Use graphical install:
graphical

# Ignore any other system drives - so we don't accidentally delete them:
#ignoredisk --only-use=/dev/disk/by-id/ata-WDC_WDS500G1R0A-68A4W0_23464V801616
ignoredisk --only-use=/dev/disk/by-id/nvme-eui.002538bc31b0c263

# Remove all existing partitions for a clean installation:
#clearpart --drives=/dev/disk/by-id/ata-WDC_WDS500G1R0A-68A4W0_23464V801616 --all --initlabel
clearpart --drives=/dev/disk/by-id/nvme-eui.002538bc31b0c263 --all --initlabel

# Disk partitioning information:
#part /boot            --fstype="xfs"      --ondisk=/dev/disk/by-id/nvme-eui.002538bc31b0c263 --size=3072
part /boot/efi        --fstype="efi"      --ondisk=/dev/disk/by-id/nvme-eui.002538bc31b0c263 --size=1024   --fsoptions="umask=0077,shortname=winnt"
part biosboot         --fstype="biosboot" --ondisk=/dev/disk/by-id/nvme-eui.002538bc31b0c263 --size=1
part btrfs.boot       --fstype="btrfs"    --ondisk=/dev/disk/by-id/nvme-eui.002538bc31b0c263 --size=3072
part btrfs.silverblue --fstype="btrfs"    --ondisk=/dev/disk/by-id/nvme-eui.002538bc31b0c263 --size=262144 --grow --fsoptions="compress=zstd:1,noatime" --encrypted --luks-version=luks2

btrfs /boot --label=boot   --data=single btrfs.boot
btrfs none  --label=fedora --data=single btrfs.silverblue
btrfs /               --subvol LABEL=fedora --name=@
btrfs /var            --subvol LABEL=fedora --name=var
btrfs /var/log        --subvol LABEL=fedora --name=var.log
btrfs /var/containers --subvol LABEL=fedora --name=var.containers
btrfs /var/home       --subvol LABEL=fedora --name=var.home

# Create multiple personal subvolumes - to allow better snapshots management:
btrfs /var/home/deekej           --subvol LABEL=fedora --name=deekej
btrfs /var/home/deekej/.backups  --subvol LABEL=fedora --name=deekej.backups
btrfs /var/home/deekej/.cache    --subvol LABEL=fedora --name=deekej.cache
btrfs /var/home/deekej/build     --subvol LABEL=fedora --name=deekej.build
btrfs /var/home/deekej/devel     --subvol LABEL=fedora --name=deekej.devel
btrfs /var/home/deekej/Documents --subvol LABEL=fedora --name=deekej.documents
btrfs /var/home/deekej/Downloads --subvol LABEL=fedora --name=deekej.downloads
btrfs /var/home/deekej/Dropbox   --subvol LABEL=fedora --name=deekej.dropbox
btrfs /var/home/deekej/Music     --subvol LABEL=fedora --name=deekej.music
btrfs /var/home/deekej/Pictures  --subvol LABEL=fedora --name=deekej.pictures
btrfs /var/home/deekej/Videos    --subvol LABEL=fedora --name=deekej.videos

# OSTree (Silverblue) installation flavor:
ostreesetup --osname="fedora" --remote="fedora" --url="file:///ostree/repo" --ref="fedora/41/x86_64/silverblue" --nogpg

# System language:
lang en_US.UTF-8

# Keyboard layout:
keyboard --vckeymap=cz --xlayouts='cz' --switch='grp:win_space_toggle'

# System time & timezone configuration:
timezone Europe/Prague --utc
timesource --ntp-pool=time.cloudflare.com --nts

# Network & firewall configuration:
network  --bootproto=dhcp --device=enp5s0       --ipv6=auto --activate
network  --bootproto=dhcp --device=enp198s0f4u1 --ipv6=auto --activate
network  --hostname=Normandy-SR3.deekej.io
firewall --use-system-defaults

# Create necessary groups / users for a follow-up setup:
group --name=deekej --gid=117813
group --name=setup  --gid=1001

# NOTE: The passwords will be changed with the follow-up setup with Ansible... This is not a password leak, relax! :)
user --name=deekej --homedir=/var/home/deekej --uid=117813 --gid=117813 --shell=/bin/zsh  --groups=deekej,wheel --gecos="Dee'Kej"       --plaintext --password="deekej"
user --name=setup  --homedir=/var/home/setup  --uid=1001   --gid=1001   --shell=/bin/bash --groups=setup,wheel  --gecos="Ansible Setup" --plaintext --password="setup"

# Add my personal SSH-key to the 'setup' user - so we can run the Ansible playbooks through it afterwards:
sshkey --username=setup "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAgSDttLVD0LQElCZmNyqROPjjeBdmyeHZDLTI992pIs setup@deekej.io"

# Do not run the Setup Agent on first boot - necessary users are already created by then:
# alternative: firstboot --reconfig
firstboot --disable

# Root password:
rootpw --lock

# Services:
services --disabled=NetworkManager-wait-online
services --enabled=sshd

# Commands to run after the installation has finished:
%post --erroronfail
cp /etc/skel/.bash* /root
%end

# Reboot after successful installation - so we can continue with the configuration via Ansible:
reboot
