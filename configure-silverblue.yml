---
# vim: filetype=yaml.ansible
# --------------------------

- name: Configure a (freshly installed) Fedora Silverblue machine
  hosts: "{{ host }}"

  # TODO:
  #   - Create a separate vars file with Gnome configuration to use with:
  #     * https://github.com/PeterMosmans/ansible-role-customize-gnome
  #     * https://galaxy.ansible.com/PeterMosmans/customize-gnome

  # TODO: Investigate how to make this work more naturally (in Ansible-way).
  pre_tasks:
    - name: Ensure we use the correct hostname
      delegate_to: controller
      tags: always
      block:
        - name: Check the config file exists for "{{ ansible_hostname }}"
          stat:
            path: "host_vars/{{ ansible_hostname }}.yml"
          register: config_path
          changed_when: false

        - name: Fail if the config file does not exist
          fail:
            msg: "host_vars/{{ ansible_hostname }}.yml config file does not exist. Is the correct host set?"
          when: not config_path.stat.exists

    - name: Check if the initial setup was previously finished
      lineinfile:
        path: /etc/.initial-setup
        state: absent
        search_string: DONE
      register: initial_setup_check
      check_mode: true
      failed_when: false
      changed_when: false

    - name: Set the 'initial_setup' variable accordingly
      set_fact:
        initial_setup: "{{ (initial_setup_check.found|bool) | ternary(false, true) }}"

    - name: Initialize the remote_tmp [~/.ansible/tmp] for 'root' user
      file:
        path:     /root/.ansible/tmp
        state:    directory
        recurse:  true
        owner:    root
        group:    root
        mode:     '0700'

    # -----------------------------------------------------------------------------

    # NOTE: Temporary workaround - expected to be fixed in Fedora 42.
    #       https://gitlab.com/fedora/ostree/sig/-/issues/6
    - name: Use the correct keyboard layout when unlocking the LUKS partition [WORKAROUND / FIX]
      command: rpm-ostree initramfs-etc --track=/etc/vconsole.conf
      register: command
      changed_when: command.stdout != 'No changes.'

    - name: Reboot the machine for the changes to take effect
      when: command.stdout != 'No changes.'
      reboot:
        pre_reboot_delay:   "{{ pre_reboot_delay }}"
        reboot_timeout:     "{{ reboot_timeout }}"
        post_reboot_delay:  "{{ post_reboot_delay }}"

  # ---------------------------------------------------------------------------

  roles:
    #- tpm-config
    #- dnf-config
    #- layered-packages
    #- users-config
    #- subvolumes-config
    #- system-config
    - system-tweaks
    #- flatpak-packages
    #- user-environment

  # ---------------------------------------------------------------------------

  #post_tasks:
  #  - name: Mark the initial setup as DONE
  #    lineinfile:
  #      path:   /etc/.initial-setup
  #      line:   DONE
  #      state:  present
  #      regexp: TODO

# ---| TODO |------------------------------------------------------------------

#- name: Copy substitued GRUB2 config to /boot/grub2 folder
#  template:
#    src:    templates/grub2-user.cfg.j2
#    dest:   /boot/grub2/user.cfg
#    owner:  root
#    group:  root
#    mode:   '0644'
#  register: grubcfg
#
#- name: Run follow-up tasks after updating /boot/grub2/user.cfg file
#  when: grubcfg.changed|bool
#  block:
#    - name: Restore SELinux context for the /boot/grub2/user.cfg file
#      command: restorecon -F /boot/grub2/user.cfg
#
#    - name: Update the GRUB configuration
#      command: grub2-mkconfig -o /boot/grub2/grub.cfg
#
#    - name: Reboot the machine for the changes to take effect
#      reboot:
#        pre_reboot_delay:   "{{ pre_reboot_delay }}"
#        reboot_timeout:     "{{ reboot_timeout }}"
#        post_reboot_delay:  "{{ post_reboot_delay }}"
